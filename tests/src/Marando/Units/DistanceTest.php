<?php

namespace Marando\Units;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-16 at 16:21:07.
 */
class DistanceTest extends \PHPUnit_Framework_TestCase {

  /**
   * @covers Marando\Units\Distance::mm
   * @todo   Implement testMm().
   */
  public function testMm() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Units\Distance::cm
   * @todo   Implement testCm().
   */
  public function testCm() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Units\Distance::m
   * @todo   Implement testM().
   */
  public function testM() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Units\Distance::km
   * @todo   Implement testKm().
   */
  public function testKm() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Units\Distance::mi
   * @todo   Implement testMi().
   */
  public function testMi() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Units\Distance::au
   */
  public function testAu() {
    $dist = Distance::au(1.5);

    $this->assertEquals(224396806050000, $dist->mm, 'mm');
    $this->assertEquals(22439680605000, $dist->cm, 'cm');
    $this->assertEquals(224396806050, $dist->m, 'm');
    $this->assertEquals(224396806.050, $dist->km, 'km');
    $this->assertEquals(139433710.9095383, $dist->mi, 'mi');
    $this->assertEquals(1.5, $dist->au, 'au');
    $this->assertEquals(0.000023718761113304037, $dist->ly, 'ly');
    $this->assertEquals(7.2722052154443E-6, $dist->pc, 'pc');
  }

  /**
   * @covers Marando\Units\Distance::pc
   */
  public function testPc() {
    $dist = Distance::pc(7.2722052154443E-6);

    $this->assertEquals(224396806050000, $dist->mm, 'mm', 1e5);
    $this->assertEquals(22439680605000, $dist->cm, 'cm', 1e4);
    $this->assertEquals(224396806050, $dist->m, 'm', 1e2);
    $this->assertEquals(224396806.050, $dist->km, 'km', 1e-1);
    $this->assertEquals(139433710.9095383, $dist->mi, 'mi', 1e-1);
    $this->assertEquals(1.5, $dist->au, 'au', 1e-9);
    $this->assertEquals(0.000023718761113304037, $dist->ly, 'ly');
    $this->assertEquals(7.27221e-6, $dist->pc, 'pc');
  }

  /**
   * @covers Marando\Units\Distance::ly
   * @todo   Implement testLy().
   */
  public function testLy() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Units\Distance::__get
   * @todo   Implement test__get().
   */
  public function test__get() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Units\Distance::__set
   * @todo   Implement test__set().
   */
  public function test__set() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Units\Distance::__toString
   * @todo   Implement test__toString().
   */
  public function test__toString() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  // /// //

  public function testOverrideAU() {
    $m_in_AU_old = 149597870.691000015;
  }

}
